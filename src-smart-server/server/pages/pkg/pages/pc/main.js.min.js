define('pages/pc/main', function(require, exports, module) {

  /**
   * main
   * @require 'pages/pc/index.scss' // 无需在页面中控制 css
   */
  
  'use strict';
  
  var localAjax = require('localAjax');
  var datePicker = require('date-picker');
  var placeholder = require('placeholder');
  
  var page = {
      $el: $('body'),
      init: function init() {
          this._renderData();
      },
  
      _renderData: function _renderData() {
          this._ajaxData();
      },
  
      _ajaxData: function _ajaxData() {
          var self = this;
          $.localAjax({
              url: 'data/indexPage.json',
              method: 'get',
              dataType: 'json',
              data: {},
              done: function done(data) {
                  self._initComponent(data.result);
                  self._bindEvent(data.result);
              },
              fail: function fail(msg) {
                  // dialog.init();
              }
          });
      },
  
      _initComponent: function _initComponent(data) {
          datePicker.init();
          placeholder.init();
      },
  
      _bindEvent: function _bindEvent(data) {
          var self = this;
          self.$el.on('click', '[data-href]', function () {
              /**
               * 按需加载处理方式
               */
              // window.location.href = $(this).data('href');
  
              /*按需异步模块测试*/
              require.async(['testMod'], function (Mod) {
                  Mod.init();
              });
              require.async(['testMod1'], function (Mod) {
                  Mod.init();
              });
          });
      }
  };
  
  module.exports = page;

});
;define('localAjax', function(require, exports, module) {

  /**
   * @author: ouvenzhang
   * @localAjax 函数，带有localstorage功能
   * @example
   * 注意回调中需要使用done，fail来处理请求成功与失败情况，原有ajax的success和error函数无效
   */
  'use strict';
  
  (function (root, factory) {
      if (typeof define === 'function' && define.amd) {
          // AMD
          define(['zepto', './localStorage', './md5'], factory);
      } else if (typeof exports === 'object') {
          // Node, CommonJS之类的
          module.exports = factory(require('zepto'), require('localStorage'), require('md5'));
      } else {
          // 浏览器全局变量(root 即 window)
          root['localAjax'] = factory(root['Zepto'], root['localData'], root['md5']);
      }
  })(undefined, function ($) {
  
      /**
       * 结合ajax获取请求数据
       * @param  {[type]} opts [description]
       * @return {[type]}      [description]
       */
      var exports = function exports(opts) {
  
          var defaults = $.extend(opts, {
              success: function success(data) {
                  opts.done && opts.done(data);
  
                  /**
                   * 延时存储数据，按照cgi的md5作为key存入localstorage
                   */
                  setTimeout(function () {
                      try {
                          $.localData.set($.md5(opts.url), JSON.stringify(data));
                      } catch (e) {
                          console.info(e.msg);
                      }
                  }, 3000);
              },
              error: function error(msg) {
                  try {
  
                      /**
                       * 失败时尝试获取本地数据进行渲染，按照cgi的md5作为key存入localstorage
                       */
                      var data = JSON.parse($.localData.get($.md5(opts.url)));
                      opts.done && opts.done(data);
                  } catch (e) {
                      opts.fail && opts.fail(msg);
                      console.info(e.msg);
                  }
              }
          });
          $.ajax(defaults);
      };
  
      $.localAjax = exports;
      return exports;
  });

});
;define('date-picker', function(require, exports, module) {

  'use strict';
  
  var Pikaday = require('widget/date-picker/pikaday');
  
  var datePicker = {
      $el: $('.ui-datepicker'),
      init: function init() {
          this._renderData();
          this._bindEvent();
      },
  
      _renderData: function _renderData() {
          this._ajaxData();
      },
  
      _ajaxData: function _ajaxData() {},
  
      _bindEvent: function _bindEvent() {
          var self = this;
  
          self.$el.pikaday({
              minDate: new Date('2010-01-01'),
              maxDate: new Date('2020-01-01')
          });
      }
  };
  
  module.exports = datePicker;

});
;define('placeholder', function(require, exports, module) {

  /*
   * jQuery placeholder, fix for IE6,7,8,9
   * @author JENA
   * @since 20131115.1504
   * @website ishere.cn
   */
  'use strict';
  
  (function (root, factory) {
      if (typeof define === 'function' && define.amd) {
          // AMD
          define(['zepto'], factory);
      } else if (typeof exports === 'object') {
          // Node, CommonJS之类的
          module.exports = factory(require('zepto'));
      } else {
          // 浏览器全局变量(root 即 window)
          root['Placeholder'] = factory(root['Zepto']);
      }
  })(undefined, function ($) {
  
      var check = function check() {
          return 'placeholder' in document.createElement('input');
      };
      var fix = function fix($) {
          $('input[placeholder]').each(function () {
              var self = $(this),
                  txt = self.attr('placeholder');
              self.find('input[placeholder]').css({
                  position: 'relative'
              });
              var holder = $('<span class="placeholder"></span>').text(txt).css({
                  position: 'absolute',
                  color: '#aaa',
                  top: 10
              });
  
              self.after(holder);
  
              holder.on('focusin', function () {
                  holder.hide();
              }).on('focusout', function () {
                  if (!self.val()) {
                      holder.show();
                  }
              }).on('click', function () {
                  holder.hide();
                  self.focus();
              });
  
              self.on('focusin', function () {
                  holder.hide();
              }).on('focusout', function () {
                  if (!self.val()) {
                      holder.show();
                  }
              }).on('click', function () {
                  holder.hide();
                  self.focus();
              });
          });
      };
  
      exports = {
          init: function init($) {
              if (!check()) {
                  fix($);
              }
          }
      };
  
      $.placeholder = exports;
      return exports;
  });

});
;define('localStorage', function(require, exports, module) {

  /**
   * localstorage: 使用全局localData调用
   */
  
  'use strict';
  
  (function (root, factory) {
      if (typeof define === 'function' && define.amd) {
          // AMD
          define('zepto', factory);
      } else if (typeof exports === 'object') {
          // Node, CommonJS之类的
          module.exports = factory(require('zepto'));
      } else {
          // 浏览器全局变量(root 即 window)
          root['localData'] = factory(root['Zepto']);
      }
  })(undefined, function ($) {
  
      var rkey = /^[0-9A-Za-z_@-]*$/;
      var store;
  
      function init() {
          if (typeof store == 'undefined') {
              store = window['localStorage'];
          }
          return true;
      }
  
      function isValidKey(key) {
          if (typeof key != 'string') {
              return false;
          }
          return rkey.test(key);
      }
  
      var exports = {
          set: function set(key, value) {
              var success = false;
              if (isValidKey(key) && init()) {
                  try {
                      value += '';
                      store.setItem(key, value);
                      success = true;
                  } catch (e) {}
              }
              return success;
          },
          get: function get(key) {
              if (isValidKey(key) && init()) {
                  try {
                      return store.getItem(key);
                  } catch (e) {}
              }
              return null;
          },
          remove: function remove(key) {
              if (isValidKey(key) && init()) {
                  try {
                      store.removeItem(key);
                      return true;
                  } catch (e) {}
              }
              return false;
          },
          clear: function clear() {
              if (init()) {
                  try {
                      for (var o in store) {
                          store.removeItem(o);
                      }
                      return true;
                  } catch (e) {}
              }
              return false;
          }
      };
      $.localData = exports;
      return exports;
  });

});
;define('md5', function(require, exports, module) {

  /*
   * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
   * Digest Algorithm, as defined in RFC 1321.
   * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
   * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
   * Distributed under the BSD License
   * See http://pajhome.org.uk/crypt/md5 for more info.
   */
  
  'use strict';
  
  (function (root, factory) {
      if (typeof define === 'function' && define.amd) {
          // AMD
          define(['zepto'], factory);
      } else if (typeof exports === 'object') {
          // Node, CommonJS之类的
          module.exports = factory(require('zepto'));
      } else {
          // 浏览器全局变量(root 即 window)
          root['md5'] = factory(root['Zepto']);
      }
  })(undefined, function ($) {
      var exports = $;
      var hexcase = 0; /* hex output format. 0 - lowercase; 1 - uppercase        */
      var b64pad = ""; /* base-64 pad character. "=" for strict RFC compliance   */
      var chrsz = 8; /* bits per input character. 8 - ASCII; 16 - Unicode      */
  
      /*
       * These are the functions you'll usually want to call
       * They take string arguments and return either hex or base-64 encoded strings
       */
      function hex_md5(s) {
          return binl2hex(core_md5(str2binl(s), s.length * chrsz));
      }
  
      function b64_md5(s) {
          return binl2b64(core_md5(str2binl(s), s.length * chrsz));
      }
  
      function str_md5(s) {
          return binl2str(core_md5(str2binl(s), s.length * chrsz));
      }
  
      function hex_hmac_md5(key, data) {
          return binl2hex(core_hmac_md5(key, data));
      }
  
      function b64_hmac_md5(key, data) {
          return binl2b64(core_hmac_md5(key, data));
      }
  
      function str_hmac_md5(key, data) {
          return binl2str(core_hmac_md5(key, data));
      }
  
      /*
       * Perform a simple self-test to see if the VM is working
       */
      function md5_vm_test() {
          return hex_md5("abc") == "900150983cd24fb0d6963f7d28e17f72";
      }
  
      /*
       * Calculate the MD5 of an array of little-endian words, and a bit length
       */
      function core_md5(x, len) {
          /* append padding */
          x[len >> 5] |= 0x80 << len % 32;
          x[(len + 64 >>> 9 << 4) + 14] = len;
  
          var a = 1732584193;
          var b = -271733879;
          var c = -1732584194;
          var d = 271733878;
  
          for (var i = 0; i < x.length; i += 16) {
              var olda = a;
              var oldb = b;
              var oldc = c;
              var oldd = d;
  
              a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);
              d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);
              c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);
              b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);
              a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);
              d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);
              c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);
              b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);
              a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);
              d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);
              c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);
              b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);
              a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);
              d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);
              c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);
              b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);
  
              a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);
              d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);
              c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);
              b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);
              a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);
              d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);
              c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);
              b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);
              a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);
              d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);
              c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);
              b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);
              a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);
              d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);
              c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);
              b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);
  
              a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);
              d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);
              c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);
              b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);
              a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);
              d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);
              c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);
              b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);
              a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);
              d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);
              c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);
              b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);
              a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);
              d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);
              c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);
              b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);
  
              a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);
              d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);
              c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);
              b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);
              a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);
              d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);
              c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);
              b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);
              a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);
              d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);
              c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);
              b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);
              a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);
              d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);
              c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);
              b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);
  
              a = safe_add(a, olda);
              b = safe_add(b, oldb);
              c = safe_add(c, oldc);
              d = safe_add(d, oldd);
          }
          return Array(a, b, c, d);
      }
  
      /*
       * These functions implement the four basic operations the algorithm uses.
       */
      function md5_cmn(q, a, b, x, s, t) {
          return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);
      }
  
      function md5_ff(a, b, c, d, x, s, t) {
          return md5_cmn(b & c | ~b & d, a, b, x, s, t);
      }
  
      function md5_gg(a, b, c, d, x, s, t) {
          return md5_cmn(b & d | c & ~d, a, b, x, s, t);
      }
  
      function md5_hh(a, b, c, d, x, s, t) {
          return md5_cmn(b ^ c ^ d, a, b, x, s, t);
      }
  
      function md5_ii(a, b, c, d, x, s, t) {
          return md5_cmn(c ^ (b | ~d), a, b, x, s, t);
      }
  
      /*
       * Calculate the HMAC-MD5, of a key and some data
       */
      function core_hmac_md5(key, data) {
          var bkey = str2binl(key);
          if (bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz);
  
          var ipad = Array(16),
              opad = Array(16);
          for (var i = 0; i < 16; i++) {
              ipad[i] = bkey[i] ^ 0x36363636;
              opad[i] = bkey[i] ^ 0x5C5C5C5C;
          }
  
          var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);
          return core_md5(opad.concat(hash), 512 + 128);
      }
  
      /*
       * Add integers, wrapping at 2^32. This uses 16-bit operations internally
       * to work around bugs in some JS interpreters.
       */
      function safe_add(x, y) {
          var lsw = (x & 0xFFFF) + (y & 0xFFFF);
          var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
          return msw << 16 | lsw & 0xFFFF;
      }
  
      /*
       * Bitwise rotate a 32-bit number to the left.
       */
      function bit_rol(num, cnt) {
          return num << cnt | num >>> 32 - cnt;
      }
  
      /*
       * Convert a string to an array of little-endian words
       * If chrsz is ASCII, characters >255 have their hi-byte silently ignored.
       */
      function str2binl(str) {
          var bin = Array();
          var mask = (1 << chrsz) - 1;
          for (var i = 0; i < str.length * chrsz; i += chrsz) bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << i % 32;
          return bin;
      }
  
      /*
       * Convert an array of little-endian words to a string
       */
      function binl2str(bin) {
          var str = "";
          var mask = (1 << chrsz) - 1;
          for (var i = 0; i < bin.length * 32; i += chrsz) str += String.fromCharCode(bin[i >> 5] >>> i % 32 & mask);
          return str;
      }
  
      /*
       * Convert an array of little-endian words to a hex string.
       */
      function binl2hex(binarray) {
          var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
          var str = "";
          for (var i = 0; i < binarray.length * 4; i++) {
              str += hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 + 4 & 0xF) + hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 & 0xF);
          }
          return str;
      }
  
      /*
       * Convert an array of little-endian words to a base-64 string
       */
      function binl2b64(binarray) {
          var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
          var str = "";
          for (var i = 0; i < binarray.length * 4; i += 3) {
              var triplet = (binarray[i >> 2] >> 8 * (i % 4) & 0xFF) << 16 | (binarray[i + 1 >> 2] >> 8 * ((i + 1) % 4) & 0xFF) << 8 | binarray[i + 2 >> 2] >> 8 * ((i + 2) % 4) & 0xFF;
              for (var j = 0; j < 4; j++) {
                  if (i * 8 + j * 6 > binarray.length * 32) str += b64pad;else str += tab.charAt(triplet >> 6 * (3 - j) & 0x3F);
              }
          }
          return str;
      }
  
      $.md5 = hex_md5;
  
      return hex_md5;
  });
  /*
   * Configurable variables. You may need to tweak these to be compatible with
   * the server-side, but the defaults work in most cases.
   */

});
;define('widget/date-picker/pikaday', function(require, exports, module) {

  /*!
   * Pikaday
   *
   * Copyright © 2014 David Bushell | BSD & MIT license | https://github.com/dbushell/Pikaday
   */
  
  "use strict";
  
  var $ = require('zepto');
  
  Date.prototype.Format = function (fmt) {
      //author: meizz
      var o = {
          "M+": this.getMonth() + 1, //月份
          "d+": this.getDate(), //日
          "h+": this.getHours(), //小时
          "m+": this.getMinutes(), //分
          "s+": this.getSeconds(), //秒
          "q+": Math.floor((this.getMonth() + 3) / 3), //季度
          "S": this.getMilliseconds() //毫秒
      };
      if (/(y+)/i.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
      for (var k in o) if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : ("00" + o[k]).substr(("" + o[k]).length));
      return fmt;
  };
  /**
   * feature detection and helper functions
   */
  var hasEventListeners = !!window.addEventListener,
      document = window.document,
      sto = window.setTimeout,
      addEvent = function addEvent(el, e, callback, capture) {
      if (hasEventListeners) {
          el.addEventListener(e, callback, !!capture);
      } else {
          el.attachEvent('on' + e, callback);
      }
  },
      removeEvent = function removeEvent(el, e, callback, capture) {
      if (hasEventListeners) {
          el.removeEventListener(e, callback, !!capture);
      } else {
          el.detachEvent('on' + e, callback);
      }
  },
      fireEvent = function fireEvent(el, eventName, data) {
      var ev;
  
      if (document.createEvent) {
          ev = document.createEvent('HTMLEvents');
          ev.initEvent(eventName, true, false);
          ev = extend(ev, data);
          el.dispatchEvent(ev);
      } else if (document.createEventObject) {
          ev = document.createEventObject();
          ev = extend(ev, data);
          el.fireEvent('on' + eventName, ev);
      }
  },
      trim = function trim(str) {
      return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, '');
  },
      hasClass = function hasClass(el, cn) {
      return (' ' + el.className + ' ').indexOf(' ' + cn + ' ') !== -1;
  },
      addClass = function addClass(el, cn) {
      if (!hasClass(el, cn)) {
          el.className = el.className === '' ? cn : el.className + ' ' + cn;
      }
  },
      removeClass = function removeClass(el, cn) {
      el.className = trim((' ' + el.className + ' ').replace(' ' + cn + ' ', ' '));
  },
      isArray = function isArray(obj) {
      return (/Array/.test(Object.prototype.toString.call(obj))
      );
  },
      isDate = function isDate(obj) {
      return (/Date/.test(Object.prototype.toString.call(obj)) && !isNaN(obj.getTime())
      );
  },
      isWeekend = function isWeekend(date) {
      var day = date.getDay();
      return day === 0 || day === 6;
  },
      isLeapYear = function isLeapYear(year) {
      // solution by Matti Virkkunen: http://stackoverflow.com/a/4881951
      return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
  },
      getDaysInMonth = function getDaysInMonth(year, month) {
      return [31, isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];
  },
      setToStartOfDay = function setToStartOfDay(date) {
      if (isDate(date)) date.setHours(0, 0, 0, 0);
  },
      compareDates = function compareDates(a, b) {
      // weak date comparison (use setToStartOfDay(date) to ensure correct result)
      return a.getTime() === b.getTime();
  },
      extend = function extend(to, from, overwrite) {
      var prop, hasProp;
      for (prop in from) {
          hasProp = to[prop] !== undefined;
          if (hasProp && typeof from[prop] === 'object' && from[prop] !== null && from[prop].nodeName === undefined) {
              if (isDate(from[prop])) {
                  if (overwrite) {
                      to[prop] = new Date(from[prop].getTime());
                  }
              } else if (isArray(from[prop])) {
                  if (overwrite) {
                      to[prop] = from[prop].slice(0);
                  }
              } else {
                  to[prop] = extend({}, from[prop], overwrite);
              }
          } else if (overwrite || !hasProp) {
              to[prop] = from[prop];
          }
      }
      return to;
  },
      adjustCalendar = function adjustCalendar(calendar) {
      if (calendar.month < 0) {
          calendar.year -= Math.ceil(Math.abs(calendar.month) / 12);
          calendar.month += 12;
      }
      if (calendar.month > 11) {
          calendar.year += Math.floor(Math.abs(calendar.month) / 12);
          calendar.month -= 12;
      }
      return calendar;
  },
  
  /**
   * defaults and localisation
   */
  defaults = {
  
      // bind the picker to a form field
      field: null,
  
      // automatically show/hide the picker on `field` focus (default `true` if `field` is set)
      bound: undefined,
  
      // position of the datepicker, relative to the field (default to bottom & left)
      // ('bottom' & 'left' keywords are not used, 'top' & 'right' are modifier on the bottom/left position)
      position: 'bottom left',
  
      // automatically fit in the viewport even if it means repositioning from the position option
      reposition: true,
  
      // the default output format for `.toString()` and `field` value
      format: 'yyyy-MM-dd',
  
      // the initial date to view when first opened
      defaultDate: null,
  
      // make the `defaultDate` the initial selected value
      setDefaultDate: false,
  
      // first day of week (0: Sunday, 1: Monday etc)
      firstDay: 0,
  
      // the default flag for moment's strict date parsing
      formatStrict: false,
  
      // the minimum/earliest date that can be selected
      minDate: null,
      // the maximum/latest date that can be selected
      maxDate: null,
  
      // number of years either side, or array of upper/lower range
      yearRange: 10,
  
      // show week numbers at head of row
      showWeekNumber: false,
  
      // used internally (don't config outside)
      minYear: 0,
      maxYear: 9999,
      minMonth: undefined,
      maxMonth: undefined,
  
      startRange: null,
      endRange: null,
  
      isRTL: false,
  
      // Additional text to append to the year in the calendar title
      yearSuffix: '',
  
      // Render the month after year in the calendar title
      showMonthAfterYear: false,
  
      // Render days of the calendar grid that fall in the next or previous month
      showDaysInNextAndPreviousMonths: false,
  
      // how many months are visible
      numberOfMonths: 1,
  
      // when numberOfMonths is used, this will help you to choose where the main calendar will be (default `left`, can be set to `right`)
      // only used for the first display or when a selected date is not visible
      mainCalendar: 'left',
  
      // Specify a DOM element to render the calendar in
      container: undefined,
  
      // internationalization
      i18n: {
          previousMonth: '上月',
          nextMonth: '下月',
          months: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],
          weekdays: ['日', '一', '二', '三', '四', '五', '六'],
          weekdaysShort: ['日', '一', '二', '三', '四', '五', '六']
      },
  
      // Theme Classname
      theme: null,
  
      // callback function
      onSelect: null,
      onOpen: null,
      onClose: null,
      onDraw: null
  },
  
  /**
   * templating functions to abstract HTML rendering
   */
  renderDayName = function renderDayName(opts, day, abbr) {
      day += opts.firstDay;
      while (day >= 7) {
          day -= 7;
      }
      return abbr ? opts.i18n.weekdaysShort[day] : opts.i18n.weekdays[day];
  },
      renderDay = function renderDay(opts) {
      var arr = [];
      if (opts.isEmpty) {
          if (opts.showDaysInNextAndPreviousMonths) {
              arr.push('is-outside-current-month');
          } else {
              return '<td class="is-empty"></td>';
          }
      }
      if (opts.isDisabled) {
          arr.push('is-disabled');
      }
      if (opts.isToday) {
          arr.push('is-today');
      }
      if (opts.isSelected) {
          arr.push('is-selected');
      }
      if (opts.isInRange) {
          arr.push('is-inrange');
      }
      if (opts.isStartRange) {
          arr.push('is-startrange');
      }
      if (opts.isEndRange) {
          arr.push('is-endrange');
      }
      return '<td data-day="' + opts.day + '" class="' + arr.join(' ') + '">' + '<button class="pika-button pika-day" type="button" ' + 'data-pika-year="' + opts.year + '" data-pika-month="' + opts.month + '" data-pika-day="' + opts.day + '">' + opts.day + '</button>' + '</td>';
  },
      renderWeek = function renderWeek(d, m, y) {
      // Lifted from http://javascript.about.com/library/blweekyear.htm, lightly modified.
      var onejan = new Date(y, 0, 1),
          weekNum = Math.ceil(((new Date(y, m, d) - onejan) / 86400000 + onejan.getDay() + 1) / 7);
      return '<td class="pika-week">' + weekNum + '</td>';
  },
      renderRow = function renderRow(days, isRTL) {
      return '<tr>' + (isRTL ? days.reverse() : days).join('') + '</tr>';
  },
      renderBody = function renderBody(rows) {
      return '<tbody>' + rows.join('') + '</tbody>';
  },
      renderHead = function renderHead(opts) {
      var i,
          arr = [];
      if (opts.showWeekNumber) {
          arr.push('<th></th>');
      }
      for (i = 0; i < 7; i++) {
          arr.push('<th scope="col"><abbr title="' + renderDayName(opts, i) + '">' + renderDayName(opts, i, true) + '</abbr></th>');
      }
      return '<thead>' + (opts.isRTL ? arr.reverse() : arr).join('') + '</thead>';
  },
      renderTitle = function renderTitle(instance, c, year, month, refYear) {
      var i,
          j,
          arr,
          opts = instance._o,
          isMinYear = year === opts.minYear,
          isMaxYear = year === opts.maxYear,
          html = '<div class="pika-title">',
          monthHtml,
          yearHtml,
          prev = true,
          next = true;
  
      for (arr = [], i = 0; i < 12; i++) {
          arr.push('<option value="' + (year === refYear ? i - c : 12 + i - c) + '"' + (i === month ? ' selected' : '') + (isMinYear && i < opts.minMonth || isMaxYear && i > opts.maxMonth ? 'disabled' : '') + '>' + opts.i18n.months[i] + '</option>');
      }
      monthHtml = '<div class="pika-label">' + opts.i18n.months[month] + '<select class="pika-select pika-select-month" tabindex="-1">' + arr.join('') + '</select></div>';
  
      if (isArray(opts.yearRange)) {
          i = opts.yearRange[0];
          j = opts.yearRange[1] + 1;
      } else {
          i = year - opts.yearRange;
          j = 1 + year + opts.yearRange;
      }
  
      for (arr = []; i < j && i <= opts.maxYear; i++) {
          if (i >= opts.minYear) {
              arr.push('<option value="' + i + '"' + (i === year ? ' selected' : '') + '>' + i + '</option>');
          }
      }
      yearHtml = '<div class="pika-label">' + year + opts.yearSuffix + '<select class="pika-select pika-select-year" tabindex="-1">' + arr.join('') + '</select></div>';
  
      if (opts.showMonthAfterYear) {
          html += yearHtml + monthHtml;
      } else {
          html += monthHtml + yearHtml;
      }
  
      if (isMinYear && (month === 0 || opts.minMonth >= month)) {
          prev = false;
      }
  
      if (isMaxYear && (month === 11 || opts.maxMonth <= month)) {
          next = false;
      }
  
      if (c === 0) {
          html += '<button class="pika-prev' + (prev ? '' : ' is-disabled') + '" type="button">' + opts.i18n.previousMonth + '</button>';
      }
      if (c === instance._o.numberOfMonths - 1) {
          html += '<button class="pika-next' + (next ? '' : ' is-disabled') + '" type="button">' + opts.i18n.nextMonth + '</button>';
      }
  
      return html += '</div>';
  },
      renderTable = function renderTable(opts, data) {
      return '<table cellpadding="0" cellspacing="0" class="pika-table">' + renderHead(opts) + renderBody(data) + '</table>';
  },
  
  /**
   * Pikaday constructor
   */
  Pikaday = function Pikaday(options) {
      var self = this,
          opts = self.config(options);
  
      self._onMouseDown = function (e) {
          if (!self._v) {
              return;
          }
          e = e || window.event;
          var target = e.target || e.srcElement;
          if (!target) {
              return;
          }
  
          if (!hasClass(target, 'is-disabled')) {
              if (hasClass(target, 'pika-button') && !hasClass(target, 'is-empty')) {
                  self.setDate(new Date(target.getAttribute('data-pika-year'), target.getAttribute('data-pika-month'), target.getAttribute('data-pika-day')));
                  if (opts.bound) {
                      sto(function () {
                          self.hide();
                          if (opts.field) {
                              opts.field.blur();
                          }
                      }, 100);
                  }
              } else if (hasClass(target, 'pika-prev')) {
                  self.prevMonth();
              } else if (hasClass(target, 'pika-next')) {
                  self.nextMonth();
              }
          }
          if (!hasClass(target, 'pika-select')) {
              // if this is touch event prevent mouse events emulation
              if (e.preventDefault) {
                  e.preventDefault();
              } else {
                  e.returnValue = false;
                  return false;
              }
          } else {
              self._c = true;
          }
      };
  
      self._onChange = function (e) {
          e = e || window.event;
          var target = e.target || e.srcElement;
          if (!target) {
              return;
          }
          if (hasClass(target, 'pika-select-month')) {
              self.gotoMonth(target.value);
          } else if (hasClass(target, 'pika-select-year')) {
              self.gotoYear(target.value);
          }
      };
  
      self._onInputChange = function (e) {
          var date;
  
          if (e.firedBy === self) {
              return;
          } else {
              date = new Date(Date.parse(opts.field.value));
          }
          if (isDate(date)) {
              self.setDate(date);
          }
          if (!self._v) {
              self.show();
          }
      };
  
      self._onInputFocus = function () {
          self.show();
      };
  
      self._onInputClick = function () {
          self.show();
      };
  
      self._onInputBlur = function () {
          // IE allows pika div to gain focus; catch blur the input field
          var pEl = document.activeElement;
          do {
              if (hasClass(pEl, 'pika-single')) {
                  return;
              }
          } while (pEl = pEl.parentNode);
  
          if (!self._c) {
              self._b = sto(function () {
                  self.hide();
              }, 50);
          }
          self._c = false;
      };
  
      self._onClick = function (e) {
          e = e || window.event;
          var target = e.target || e.srcElement,
              pEl = target;
          if (!target) {
              return;
          }
          if (!hasEventListeners && hasClass(target, 'pika-select')) {
              if (!target.onchange) {
                  target.setAttribute('onchange', 'return;');
                  addEvent(target, 'change', self._onChange);
              }
          }
          do {
              if (hasClass(pEl, 'pika-single') || pEl === opts.trigger) {
                  return;
              }
          } while (pEl = pEl.parentNode);
          if (self._v && target !== opts.trigger && pEl !== opts.trigger) {
              self.hide();
          }
      };
  
      self.el = document.createElement('div');
      self.el.className = 'pika-single' + (opts.isRTL ? ' is-rtl' : '') + (opts.theme ? ' ' + opts.theme : '');
  
      addEvent(self.el, 'mousedown', self._onMouseDown, true);
      addEvent(self.el, 'touchend', self._onMouseDown, true);
      addEvent(self.el, 'change', self._onChange);
  
      if (opts.field) {
          if (opts.container) {
              opts.container.appendChild(self.el);
          } else if (opts.bound) {
              document.body.appendChild(self.el);
          } else {
              opts.field.parentNode.insertBefore(self.el, opts.field.nextSibling);
          }
          addEvent(opts.field, 'change', self._onInputChange);
  
          if (!opts.defaultDate) {
  
              opts.defaultDate = new Date(Date.parse(opts.field.value));
              opts.setDefaultDate = true;
          }
      }
  
      var defDate = opts.defaultDate;
  
      if (isDate(defDate)) {
          if (opts.setDefaultDate) {
              self.setDate(defDate, true);
          } else {
              self.gotoDate(defDate);
          }
      } else {
          self.gotoDate(new Date());
      }
  
      if (opts.bound) {
          this.hide();
          self.el.className += ' is-bound';
          addEvent(opts.trigger, 'click', self._onInputClick);
          addEvent(opts.trigger, 'focus', self._onInputFocus);
          addEvent(opts.trigger, 'blur', self._onInputBlur);
      } else {
          this.show();
      }
  };
  
  /**
   * public Pikaday API
   */
  Pikaday.prototype = {
  
      /**
       * configure functionality
       */
      config: function config(options) {
          if (!this._o) {
              this._o = extend({}, defaults, true);
          }
  
          var opts = extend(this._o, options, true);
  
          opts.isRTL = !!opts.isRTL;
  
          opts.field = opts.field && opts.field.nodeName ? opts.field : null;
  
          opts.theme = typeof opts.theme === 'string' && opts.theme ? opts.theme : null;
  
          opts.bound = !!(opts.bound !== undefined ? opts.field && opts.bound : opts.field);
  
          opts.trigger = opts.trigger && opts.trigger.nodeName ? opts.trigger : opts.field;
  
          opts.disableWeekends = !!opts.disableWeekends;
  
          opts.disableDayFn = typeof opts.disableDayFn === 'function' ? opts.disableDayFn : null;
  
          var nom = parseInt(opts.numberOfMonths, 10) || 1;
          opts.numberOfMonths = nom > 4 ? 4 : nom;
  
          if (!isDate(opts.minDate)) {
              opts.minDate = false;
          }
          if (!isDate(opts.maxDate)) {
              opts.maxDate = false;
          }
          if (opts.minDate && opts.maxDate && opts.maxDate < opts.minDate) {
              opts.maxDate = opts.minDate = false;
          }
          if (opts.minDate) {
              this.setMinDate(opts.minDate);
          }
          if (opts.maxDate) {
              this.setMaxDate(opts.maxDate);
          }
  
          if (isArray(opts.yearRange)) {
              var fallback = new Date().getFullYear() - 10;
              opts.yearRange[0] = parseInt(opts.yearRange[0], 10) || fallback;
              opts.yearRange[1] = parseInt(opts.yearRange[1], 10) || fallback;
          } else {
              opts.yearRange = Math.abs(parseInt(opts.yearRange, 10)) || defaults.yearRange;
              if (opts.yearRange > 100) {
                  opts.yearRange = 100;
              }
          }
  
          return opts;
      },
  
      /**
       * return a formatted string of the current selection (using Moment.js if available)
       */
      toString: function toString(format) {
  
          return !isDate(this._d) ? '' : this._d.Format(format || defaults.format);
      },
  
      /**
       * return a Date object of the current selection
       */
      getDate: function getDate() {
          return isDate(this._d) ? new Date(this._d.getTime()) : null;
      },
  
      /**
       * set the current selection
       */
      setDate: function setDate(date, preventOnSelect) {
          if (!date) {
              this._d = null;
  
              if (this._o.field) {
                  this._o.field.value = '';
                  fireEvent(this._o.field, 'change', {
                      firedBy: this
                  });
              }
  
              return this.draw();
          }
          if (typeof date === 'string') {
              date = new Date(Date.parse(date));
          }
          if (!isDate(date)) {
              return;
          }
  
          var min = this._o.minDate,
              max = this._o.maxDate;
  
          if (isDate(min) && date < min) {
              date = min;
          } else if (isDate(max) && date > max) {
              date = max;
          }
  
          this._d = new Date(date.getTime());
          setToStartOfDay(this._d);
          this.gotoDate(this._d);
  
          if (this._o.field) {
              this._o.field.value = this.toString();
              fireEvent(this._o.field, 'change', {
                  firedBy: this
              });
          }
          if (!preventOnSelect && typeof this._o.onSelect === 'function') {
              this._o.onSelect.call(this, this.getDate());
          }
      },
  
      /**
       * change view to a specific date
       */
      gotoDate: function gotoDate(date) {
          var newCalendar = true;
  
          if (!isDate(date)) {
              return;
          }
  
          if (this.calendars) {
              var firstVisibleDate = new Date(this.calendars[0].year, this.calendars[0].month, 1),
                  lastVisibleDate = new Date(this.calendars[this.calendars.length - 1].year, this.calendars[this.calendars.length - 1].month, 1),
                  visibleDate = date.getTime();
              // get the end of the month
              lastVisibleDate.setMonth(lastVisibleDate.getMonth() + 1);
              lastVisibleDate.setDate(lastVisibleDate.getDate() - 1);
              newCalendar = visibleDate < firstVisibleDate.getTime() || lastVisibleDate.getTime() < visibleDate;
          }
  
          if (newCalendar) {
              this.calendars = [{
                  month: date.getMonth(),
                  year: date.getFullYear()
              }];
              if (this._o.mainCalendar === 'right') {
                  this.calendars[0].month += 1 - this._o.numberOfMonths;
              }
          }
  
          this.adjustCalendars();
      },
  
      adjustCalendars: function adjustCalendars() {
          this.calendars[0] = adjustCalendar(this.calendars[0]);
          for (var c = 1; c < this._o.numberOfMonths; c++) {
              this.calendars[c] = adjustCalendar({
                  month: this.calendars[0].month + c,
                  year: this.calendars[0].year
              });
          }
          this.draw();
      },
  
      gotoToday: function gotoToday() {
          this.gotoDate(new Date());
      },
  
      /**
       * change view to a specific month (zero-index, e.g. 0: January)
       */
      gotoMonth: function gotoMonth(month) {
          if (!isNaN(month)) {
              this.calendars[0].month = parseInt(month, 10);
              this.adjustCalendars();
          }
      },
  
      nextMonth: function nextMonth() {
          this.calendars[0].month++;
          this.adjustCalendars();
      },
  
      prevMonth: function prevMonth() {
          this.calendars[0].month--;
          this.adjustCalendars();
      },
  
      /**
       * change view to a specific full year (e.g. "2012")
       */
      gotoYear: function gotoYear(year) {
          if (!isNaN(year)) {
              this.calendars[0].year = parseInt(year, 10);
              this.adjustCalendars();
          }
      },
  
      /**
       * change the minDate
       */
      setMinDate: function setMinDate(value) {
          setToStartOfDay(value);
          this._o.minDate = value;
          this._o.minYear = value.getFullYear();
          this._o.minMonth = value.getMonth();
          this.draw();
      },
  
      /**
       * change the maxDate
       */
      setMaxDate: function setMaxDate(value) {
          setToStartOfDay(value);
          this._o.maxDate = value;
          this._o.maxYear = value.getFullYear();
          this._o.maxMonth = value.getMonth();
          this.draw();
      },
  
      setStartRange: function setStartRange(value) {
          this._o.startRange = value;
      },
  
      setEndRange: function setEndRange(value) {
          this._o.endRange = value;
      },
  
      /**
       * refresh the HTML
       */
      draw: function draw(force) {
          if (!this._v && !force) {
              return;
          }
          var opts = this._o,
              minYear = opts.minYear,
              maxYear = opts.maxYear,
              minMonth = opts.minMonth,
              maxMonth = opts.maxMonth,
              html = '';
  
          if (this._y <= minYear) {
              this._y = minYear;
              if (!isNaN(minMonth) && this._m < minMonth) {
                  this._m = minMonth;
              }
          }
          if (this._y >= maxYear) {
              this._y = maxYear;
              if (!isNaN(maxMonth) && this._m > maxMonth) {
                  this._m = maxMonth;
              }
          }
  
          for (var c = 0; c < opts.numberOfMonths; c++) {
              html += '<div class="pika-lendar">' + renderTitle(this, c, this.calendars[c].year, this.calendars[c].month, this.calendars[0].year) + this.render(this.calendars[c].year, this.calendars[c].month) + '</div>';
          }
  
          this.el.innerHTML = html;
  
          if (opts.bound) {
              if (opts.field.type !== 'hidden') {
                  sto(function () {
                      opts.trigger.focus();
                  }, 1);
              }
          }
  
          if (typeof this._o.onDraw === 'function') {
              var self = this;
              sto(function () {
                  self._o.onDraw.call(self);
              }, 0);
          }
      },
  
      adjustPosition: function adjustPosition() {
          var field, pEl, width, height, viewportWidth, viewportHeight, scrollTop, left, top, clientRect;
  
          if (this._o.container) return;
  
          this.el.style.position = 'absolute';
  
          field = this._o.trigger;
          pEl = field;
          width = this.el.offsetWidth;
          height = this.el.offsetHeight;
          viewportWidth = window.innerWidth || document.documentElement.clientWidth;
          viewportHeight = window.innerHeight || document.documentElement.clientHeight;
          scrollTop = window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop;
  
          if (typeof field.getBoundingClientRect === 'function') {
              clientRect = field.getBoundingClientRect();
              left = clientRect.left + window.pageXOffset;
              top = clientRect.bottom + window.pageYOffset;
          } else {
              left = pEl.offsetLeft;
              top = pEl.offsetTop + pEl.offsetHeight;
              while (pEl = pEl.offsetParent) {
                  left += pEl.offsetLeft;
                  top += pEl.offsetTop;
              }
          }
  
          // default position is bottom & left
          if (this._o.reposition && left + width > viewportWidth || this._o.position.indexOf('right') > -1 && left - width + field.offsetWidth > 0) {
              left = left - width + field.offsetWidth;
          }
          if (this._o.reposition && top + height > viewportHeight + scrollTop || this._o.position.indexOf('top') > -1 && top - height - field.offsetHeight > 0) {
              top = top - height - field.offsetHeight;
          }
  
          this.el.style.left = left + 'px';
          this.el.style.top = top + 'px';
      },
  
      /**
       * render HTML for a particular month
       */
      render: function render(year, month) {
          var opts = this._o,
              now = new Date(),
              days = getDaysInMonth(year, month),
              before = new Date(year, month, 1).getDay(),
              data = [],
              row = [];
          setToStartOfDay(now);
          if (opts.firstDay > 0) {
              before -= opts.firstDay;
              if (before < 0) {
                  before += 7;
              }
          }
          var previousMonth = month === 0 ? 11 : month - 1,
              nextMonth = month === 11 ? 0 : month + 1,
              yearOfPreviousMonth = month === 0 ? year - 1 : year,
              yearOfNextMonth = month === 11 ? year + 1 : year,
              daysInPreviousMonth = getDaysInMonth(yearOfPreviousMonth, previousMonth);
          var cells = days + before,
              after = cells;
          while (after > 7) {
              after -= 7;
          }
          cells += 7 - after;
          for (var i = 0, r = 0; i < cells; i++) {
              var day = new Date(year, month, 1 + (i - before)),
                  isSelected = isDate(this._d) ? compareDates(day, this._d) : false,
                  isToday = compareDates(day, now),
                  isEmpty = i < before || i >= days + before,
                  dayNumber = 1 + (i - before),
                  monthNumber = month,
                  yearNumber = year,
                  isStartRange = opts.startRange && compareDates(opts.startRange, day),
                  isEndRange = opts.endRange && compareDates(opts.endRange, day),
                  isInRange = opts.startRange && opts.endRange && opts.startRange < day && day < opts.endRange,
                  isDisabled = opts.minDate && day < opts.minDate || opts.maxDate && day > opts.maxDate || opts.disableWeekends && isWeekend(day) || opts.disableDayFn && opts.disableDayFn(day);
  
              if (isEmpty) {
                  if (i < before) {
                      dayNumber = daysInPreviousMonth + dayNumber;
                      monthNumber = previousMonth;
                      yearNumber = yearOfPreviousMonth;
                  } else {
                      dayNumber = dayNumber - days;
                      monthNumber = nextMonth;
                      yearNumber = yearOfNextMonth;
                  }
              }
  
              var dayConfig = {
                  day: dayNumber,
                  month: monthNumber,
                  year: yearNumber,
                  isSelected: isSelected,
                  isToday: isToday,
                  isDisabled: isDisabled,
                  isEmpty: isEmpty,
                  isStartRange: isStartRange,
                  isEndRange: isEndRange,
                  isInRange: isInRange,
                  showDaysInNextAndPreviousMonths: opts.showDaysInNextAndPreviousMonths
              };
  
              row.push(renderDay(dayConfig));
  
              if (++r === 7) {
                  if (opts.showWeekNumber) {
                      row.unshift(renderWeek(i - before, month, year));
                  }
                  data.push(renderRow(row, opts.isRTL));
                  row = [];
                  r = 0;
              }
          }
          return renderTable(opts, data);
      },
  
      isVisible: function isVisible() {
          return this._v;
      },
  
      show: function show() {
          if (!this._v) {
              removeClass(this.el, 'is-hidden');
              this._v = true;
              this.draw();
              if (this._o.bound) {
                  addEvent(document, 'click', this._onClick);
                  this.adjustPosition();
              }
              if (typeof this._o.onOpen === 'function') {
                  this._o.onOpen.call(this);
              }
          }
      },
  
      hide: function hide() {
          var v = this._v;
          if (v !== false) {
              if (this._o.bound) {
                  removeEvent(document, 'click', this._onClick);
              }
              this.el.style.position = 'static'; // reset
              this.el.style.left = 'auto';
              this.el.style.top = 'auto';
              addClass(this.el, 'is-hidden');
              this._v = false;
              if (v !== undefined && typeof this._o.onClose === 'function') {
                  this._o.onClose.call(this);
              }
          }
      },
  
      /**
       * GAME OVER
       */
      destroy: function destroy() {
          this.hide();
          removeEvent(this.el, 'mousedown', this._onMouseDown, true);
          removeEvent(this.el, 'touchend', this._onMouseDown, true);
          removeEvent(this.el, 'change', this._onChange);
          if (this._o.field) {
              removeEvent(this._o.field, 'change', this._onInputChange);
              if (this._o.bound) {
                  removeEvent(this._o.trigger, 'click', this._onInputClick);
                  removeEvent(this._o.trigger, 'focus', this._onInputFocus);
                  removeEvent(this._o.trigger, 'blur', this._onInputBlur);
              }
          }
          if (this.el.parentNode) {
              this.el.parentNode.removeChild(this.el);
          }
      }
  
  };
  
  $.fn.pikaday = function () {
      var args = arguments;
  
      if (!args || !args.length) {
          args = [{}];
      }
  
      return this.each(function () {
          var self = $(this),
              plugin = self.data('pikaday');
  
          if (!(plugin instanceof Pikaday)) {
              if (typeof args[0] === 'object') {
                  var options = $.extend({}, args[0]);
                  options.field = self[0];
                  self.data('pikaday', new Pikaday(options));
              }
          } else {
              if (typeof args[0] === 'string' && typeof plugin[args[0]] === 'function') {
                  plugin[args[0]].apply(plugin, Array.prototype.slice.call(args, 1));
  
                  if (args[0] === 'destroy') {
                      self.removeData('pikaday');
                  }
              }
          }
      });
  };

});
